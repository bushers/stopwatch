module.exports = { contents: "\"use strict\";\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Dialog_1 = require(\"./Dialog\");\r\nvar React = require(\"react\");\r\nvar Promise = require(\"bluebird\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar DialogProvider = /** @class */ (function () {\r\n    function DialogProvider(el) {\r\n        var _this = this;\r\n        this.show = function (content, dialogProps) {\r\n            _this.el.classList.add(\"shown\");\r\n            return new Promise(function (resolve, reject) {\r\n                var props = __assign({}, dialogProps, { visible: true, close: function () { _this.hide(resolve, reject); } });\r\n                ReactDOM.render(React.createElement(Dialog_1.Dialog, __assign({}, props, { ref: function (e) { return _this.dialogEl = e; } }), content(resolve, reject)), _this.el);\r\n            });\r\n        };\r\n        this.hide = function (resolve, reject) {\r\n            _this.dialogEl.close().then(function (res) {\r\n                if (res) {\r\n                    ReactDOM.unmountComponentAtNode(_this.el);\r\n                    // this.el.classList.remove(\"shown\")\r\n                    // this.el.innerHTML = \"\";\r\n                    resolve && resolve();\r\n                }\r\n            }, function () { });\r\n        };\r\n        if (!el) {\r\n            el = document.createElement('div');\r\n            el.className = 'dialog-service-wrapper';\r\n            document.querySelector('body').appendChild(el);\r\n        }\r\n        this.el = el;\r\n    }\r\n    return DialogProvider;\r\n}());\r\nexports.DialogProvider = DialogProvider;\r\n//# sourceMappingURL=DialogProvider.js.map",
dependencies: ["./Dialog","react","bluebird","react-dom"],
sourceMap: "{\"version\":3,\"file\":\"components/ui/Dialog/DialogProvider.jsx\",\"sourceRoot\":\"\",\"sources\":[\"/src/components/ui/Dialog/DialogProvider.tsx\"],\"names\":[],\"mappings\":\";;;;;;;;;;AACA,mCAA+C;AAC/C,6BAA+B;AAC/B,kCAAoC;AACpC,oCAAsC;AAEtC;IAGI,wBAAY,EAAgB;QAA5B,iBAQC;QAED,SAAI,GAAG,UAAC,OAAqD,EAAE,WAAyB;YACpF,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAI,KAAK,gBACF,WAAW,IACd,OAAO,EAAE,IAAI,EACb,KAAK,EAAE,cAAM,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAE,CAAA,CAAA,CAAC,GAC5C,CAAC;gBACF,QAAQ,CAAC,MAAM,CACX,oBAAC,eAAM,eAAK,KAAK,IACb,GAAG,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAjB,CAAiB,KAC1B,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CACpB,EACT,KAAI,CAAC,EAAE,CAAC,CAAA;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;QAED,SAAI,GAAG,UAAC,OAAY,EAAE,MAAW;YAC7B,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAC,GAAG;gBAC3B,IAAG,GAAG,EAAC;oBACH,QAAQ,CAAC,sBAAsB,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;oBACzC,oCAAoC;oBACpC,0BAA0B;oBAC1B,OAAO,IAAI,OAAO,EAAE,CAAA;iBACvB;YACL,CAAC,EAAC,cAAK,CAAC,CAAC,CAAA;QACb,CAAC,CAAA;QAnCG,IAAI,CAAC,EAAE,EAAE;YACL,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACnC,EAAE,CAAC,SAAS,GAAG,wBAAwB,CAAC;YACxC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SAClD;QACD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IAEjB,CAAC;IA6BL,qBAAC;AAAD,CAAC,AAxCD,IAwCC;AAxCY,wCAAc\",\"sourcesContent\":[\"\\nimport { Dialog, DialogProps } from './Dialog';\\nimport * as React from 'react';\\nimport * as Promise from 'bluebird';\\nimport * as ReactDOM from 'react-dom';\\n\\nexport class DialogProvider {\\n    el: HTMLElement;\\n    dialogEl: Dialog;\\n    constructor(el?: HTMLElement) {\\n        if (!el) {\\n            el = document.createElement('div');\\n            el.className = 'dialog-service-wrapper';\\n            document.querySelector('body').appendChild(el);\\n        }\\n        this.el = el;\\n\\n    }\\n\\n    show = (content: (resolve, reject) => React.ReactElement<any>, dialogProps?: DialogProps) => {\\n        this.el.classList.add(\\\"shown\\\")\\n        return new Promise((resolve, reject) => {\\n            var props = {\\n                ...dialogProps,\\n                visible: true,\\n                close: ()=>{ this.hide(resolve, reject )}\\n            };\\n            ReactDOM.render(\\n                <Dialog {...props}\\n                    ref={e => this.dialogEl = e}>\\n                    {content(resolve, reject)}\\n                </Dialog>,\\n                this.el)\\n        });\\n    }\\n\\n    hide = (resolve?:any, reject?:any) => {\\n        this.dialogEl.close().then((res)=>{\\n            if(res){\\n                ReactDOM.unmountComponentAtNode(this.el);\\n                // this.el.classList.remove(\\\"shown\\\")\\n                // this.el.innerHTML = \\\"\\\";\\n                resolve && resolve()\\n            }\\n        },()=>{})\\n    }\\n}\"]}",
headerContent: undefined,
mtime: 1540057437956,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
